name: CI
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Run unit tests
        run: composer run test:unit
      - name: Report code coverage
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: test
    runs-on: ubuntu-latest
    #if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Get the tag name
        id: tag
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Install php dependencies
        run: cd autoload-dist && composer install && cd .. && cp -R autoload-dist/vendor vendor
      - name: Install js dependencies
        run: npm install
      - name: Build plugin bundles
        run: npm run build
      - name: Build release zip
        run: bin/build-release-zip.sh
        env:
            TAG: ${{ steps.tag.outputs.VERSION }}
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.VERSION }}
          release_name: Release ${{ steps.tag.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release zip to Github
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./burst-payment-${{ steps.tag.outputs.VERSION }}.zip
          asset_name: burst-payment-${{ steps.tag.outputs.VERSION }}.zip
          asset_content_type: application/zip
